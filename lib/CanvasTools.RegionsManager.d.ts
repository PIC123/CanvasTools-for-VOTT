import { IRect } from "./Interface/IRect";
import { IPoint2D } from "./Interface/IPoint2D";
import { ManipulationFunction } from "./CanvasTools.RegionComponent";
import { TagsDescriptor } from "./Core/CanvasTools.Tags";
export declare class RegionsManager {
    private baseParent;
    private paper;
    private paperRect;
    private regions;
    private menuLayer;
    private menu;
    onManipulationBegin: ManipulationFunction;
    onManipulationEnd: ManipulationFunction;
    onRegionSelected: Function;
    onRegionMove: Function;
    onRegionDelete: Function;
    private regionManagerLayer;
    private __isFrozen;
    readonly isFrozen: boolean;
    private frozenNuance;
    private tagsUpdateOptions;
    constructor(svgHost: SVGSVGElement, onManipulationBegin: ManipulationFunction, onManipulationEnd: ManipulationFunction);
    private buildOn;
    private subscribeToEvents;
    addRectRegion(id: string, pointA: IPoint2D, pointB: IPoint2D, tagsDescriptor: TagsDescriptor): void;
    addPointRegion(id: string, point: IPoint2D, tagsDescriptor: TagsDescriptor): void;
    drawRegion(x: number, y: number, rect: IRect, id: string, tagsDescriptor: TagsDescriptor): void;
    redrawAllRegions(): void;
    private sortRegionsByArea;
    private lookupRegionByID;
    private lookupSelectedRegions;
    getSelectedRegionsBounds(): {
        id: string;
        x: number;
        y: number;
        width: number;
        height: number;
    }[];
    private deleteRegion;
    private deleteSelectedRegions;
    deleteRegionById(id: string): void;
    deleteAllRegions(): void;
    updateTagsById(id: string, tagsDescriptor: TagsDescriptor): void;
    updateTagsForSelectedRegions(tagsDescriptor: TagsDescriptor): void;
    private selectRegion;
    private selectAllRegions;
    selectRegionById(id: string): void;
    private selectNextRegion;
    private reshapeRegion;
    private moveSelectedRegions;
    private resizeSelectedRegions;
    resize(width: number, height: number): void;
    private onManipulationBegin_local;
    private onManipulationEnd_local;
    private justManipulated;
    private onRegionUpdate;
    private unselectRegions;
    private toggleBackground;
    freeze(nuance?: string): void;
    unfreeze(): void;
    toggleFreezeMode(): void;
}
